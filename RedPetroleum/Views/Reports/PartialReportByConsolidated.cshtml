@using RedPetroleum.Models;
@model List<RedPetroleum.Models.DepartmentsWithChildren>
@{
    int i = 1;
}
@if (Model != null)
{
    foreach (CustomDepartment department in ViewBag.DepartmentsWithoutParentAndChildren)
    {
        <tr>
            <td class="text-center">@(i++)</td>
            <td>@department.Name</td>
            @if (@Math.Round(Convert.ToDouble(department.AverageMark), 2) != 0)
            {
                <td class="text-center">+</td>
                <td class="text-center">@Math.Round(Convert.ToDouble(department.AverageMark), 2) %</td>
            }
            else
            {
                <td></td>
                <td></td>
            }

            @if (@Math.Round(Convert.ToDouble(department.AverageMark), 2) != 0 && @Math.Round(Convert.ToDouble(department.AverageMarkDepartment), 2) != 0)
            {
                <td class="text-center">@Math.Round(Convert.ToDouble(department.AverageMarkDepartment), 2) %</td>
                <td class="text-center">@(Math.Round(((Convert.ToDouble(department.AverageMark)) + (Convert.ToDouble(department.AverageMarkDepartment))) / 2, 2)) %</td>
            }
            else
            {
                <td></td>
                <td></td>
            }
        </tr>
    }
    foreach (var item in Model)
    {
        <tr>
            <td></td>
            <td style="font-weight:bold">@item.Department.Name</td>
            @if (@Math.Round(Convert.ToDouble(item.AverageMark), 2) != 0)
            {
                <td class="text-center">+</td>
                <td class="text-center">@Math.Round(Convert.ToDouble(item.AverageMark), 2) %</td>
            }
            else
            {
                <td></td>
                <td></td>
            }
            @if (@Math.Round(Convert.ToDouble(item.AverageMark), 2) != 0 && @Math.Round(Convert.ToDouble(item.AverageMarkDepartment), 2) != 0)
            {
                <td class="text-center">@Math.Round(Convert.ToDouble(item.AverageMarkDepartment), 2) %</td>
                <td class="text-center">@(Math.Round(((Convert.ToDouble(item.AverageMark)) + (Convert.ToDouble(item.AverageMarkDepartment))) / 2, 2)) %</td>

            }
            else
            {
                <td></td>
                <td></td>
            }
        </tr>
        foreach (var child in item.Children)
        {
            <tr>
                <td class="text-center">@(i++)</td>
                <td>@child.Name</td>
                @if (@Math.Round(Convert.ToDouble(child.AverageMark), 2) != 0)
                {
                    <td class="text-center">+</td>
                    <td class="text-center">@Math.Round(Convert.ToDouble(child.AverageMark), 2) %</td>
                }
                else
                {
                    <td></td>
                    <td></td>
                }
                @if (@Math.Round(Convert.ToDouble(child.AverageMark), 2) != 0 && @Math.Round(Convert.ToDouble(child.AverageMarkDepartment), 2) != 0)
                {
                    <td class="text-center">@Math.Round(Convert.ToDouble(child.AverageMarkDepartment), 2) %</td>
                    <td class="text-center">@(Math.Round(((Convert.ToDouble(child.AverageMark)) + (Convert.ToDouble(child.AverageMarkDepartment))) / 2, 2)) %</td>
                }
                else
                {
                    <td></td>
                    <td></td>
                }
            </tr>
        }
    }
}
