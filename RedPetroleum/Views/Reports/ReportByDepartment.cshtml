@*@model IEnumerable<RedPetroleum.Models.Entities.Employee>*@
@model List<RedPetroleum.Models.ReportByCompanyViewModel>
@{
    ViewBag.Title = "Главная";
    int i = 1;
}

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <label for="taskDate">Выберите месяц</label>
        </div>
        <div class="col-md-3">
            <input class="form-control" id="taskDate" type="month" name="taskDate" value="@ViewBag.Today" onchange="updateDepartmentTable();">
        </div>
    </div>
    <br />
    @Html.DropDownList("Departments", null, "Выберите отдел...", htmlAttributes: new { @class = "form-control", @id = "departmentsDropdown", @onChange = "updateDepartmentTable();" })

    <table class="table table-striped">
        <thead>
            <tr>
                <th colspan="5" class="text-center" id="dt">
                    ОЦЕНКА ЭФФЕКТИВНОСТИ ПЕРСОНАЛА - @DateTime.Now.ToString("MMMM yyyy г.")
                </th>

            </tr>
            <tr>
                <th colspan="5" class="text-center" id="nameDep">
                    <p id="DepartmentName">Выберите отдел...</p>
                </th>
            </tr>
        </thead>
        <thead>
            <tr>
                <th class="w-10 text-center">№</th>
                <th class="w-25 text-center">Ф.И.О</th>
                <th class="w-25 text-center">Должность</th>
                <th class="text-center">Средний показатель</th>
                <th class="text-center">Подпись</th>
            </tr>
        </thead>
        <tbody id="tableContent">
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">@(i++)</td>
                        <td class="employee">@item.EmployeeName</td>
                        <td>@item.Position</td>
                        <td class="text-center mark">@Math.Round(Convert.ToDouble(item.AverageMark), 2) %</td>
                        <td></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    @Html.AntiForgeryToken()
    <button type="button" id="downloadBtn" disabled class="btn btn-success" onclick="downloadReport('ReportByDepartment')">Скачать отчет</button>
    <button type="button" id="downloadBtn2"  class="btn btn-success" onclick="ShowEmployeeChart();">Показать график</button>
</div>
<div id="chartContainer" style="height: 370px; width: 100%;"></div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script src="~/Scripts/app.js"></script>
<script>
    function ShowEmployeeChart() {
        // $("#chartContainer").css("visibility", "visible");
        var departmentName = $("#nameDep").text();
        var dataPoints = [];
        var i = @i;
        var marks = document.getElementsByClassName("mark");
        var employees = document.getElementsByClassName("employee");
        for (var j = 0; j <= i; j++) {

            let str = marks[j].textContent.split("").reverse().join("").slice(2);
            let reversed = str.substring().split("").reverse().join("");
            dataPoints.push({ y: parseFloat(reversed.replace(',','.')), label: employees[j].textContent });
        }
        var chart = new CanvasJS.Chart("chartContainer", {
            animationEnabled: true,

            title: {
                text: "Средний показатель эффективности персонала " + departmentName.trim()
            },
            axisX: {
                interval: 1
            },
            axisY2: {
                interlacedColor: "rgba(1,77,101,.2)",
                gridColor: "rgba(1,77,101,.1)"
            },
            data: [{
                type: "bar",
                name: "companies",
                axisYType: "secondary",
                color: "#014D65",
                dataPoints: dataPoints
            }]
        });
        chart.render();

    }
</script>