@model IEnumerable<RedPetroleum.Models.Entities.TaskList>
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "TaskLists", FormMethod.Get))
{

    @Html.AntiForgeryToken()
    <!-- Search  -->
    <div class="col-md-11 search-div" style="margin-bottom: 2%;">
        <input type="text" id="searching" name="searching" class="form-control search" placeholder="Введите наименование компании" onchange="form.submit();"
               style="border: 1px solid; border-color: #eb5e28;" />
    </div>
    <div class="col-md-1 search-div">
        <button type="submit" class="btn btn-default default-btn">
            <i class="fa fa-search"></i>
            Поиск
        </button>

    </div>
}
<table class="table">
    <tr>
        <th>
            ФИО Сотрудника
        </th>
        <th>
            Задача
        </th>
        <th>
            Длительность
        </th>
        <th>
            Дата задачи
        </th>
        <th>
            Комментарии сотрудника(?)
        </th>
        <th>
            Оценка
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.EFullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskDuration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentEmployees)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mark)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.TaskListId }) |
                @Html.ActionLink("Details", "Details", new { id = item.TaskListId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.TaskListId })
            </td>
        </tr>

    }

</table>
@if (!(Model.Count() <= 0))
{
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
}